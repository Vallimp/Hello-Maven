<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[I am exceuting Reporter testcase]]>
    </line>
  </reporter-output>
  <suite started-at="2022-12-18T20:52:08 EST" name="Default suite" finished-at="2022-12-18T20:52:08 EST" duration-ms="168">
    <groups>
      <group name="Functional">
        <method signature="AnnotationImplements.test2()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" name="test2" class="testngAnnotations.AnnotationImplements"/>
      </group> <!-- Functional -->
      <group name="Sanity">
        <method signature="AnnotationImplements.test4()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" name="test4" class="testngAnnotations.AnnotationImplements"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="AnnotationImplements.test3()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" name="test3" class="testngAnnotations.AnnotationImplements"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2022-12-18T20:52:08 EST" name="Default test" finished-at="2022-12-18T20:52:08 EST" duration-ms="168">
      <class name="testngAnnotations.AnnotationImplements">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforesuite" finished-at="2022-12-18T20:52:08 EST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforetest" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforeclass" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Assert()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="Assert" finished-at="2022-12-18T20:52:08 EST" duration-ms="15" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at testngAnnotations.AnnotationImplements.Assert(AnnotationImplements.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assert -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Reporter()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="Reporter" finished-at="2022-12-18T20:52:08 EST" duration-ms="3" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[I am exceuting Reporter testcase]]>
            </line>
          </reporter-output>
        </test-method> <!-- Reporter -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Test1(java.lang.String,java.lang.String)[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="Test1" data-provider="data01" finished-at="2022-12-18T20:52:08 EST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Numpy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ninja]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Test1(java.lang.String,java.lang.String)[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="Test1" data-provider="data01" finished-at="2022-12-18T20:52:08 EST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Selenium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sessions]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="test()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="test" finished-at="2022-12-18T20:52:08 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="test2()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="test2" finished-at="2022-12-18T20:52:08 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="test3()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="test3" finished-at="2022-12-18T20:52:08 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="test4()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="test4" finished-at="2022-12-18T20:52:08 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="beforemethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftermethod" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="testparameter(java.lang.String,java.lang.String)[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="testparameter" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'book' is required by @Test on method testparameter but has not been marked @Optional or defined
in C:\Users\janga\AppData\Local\Temp\testng-eclipse-659805661\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'book' is required by @Test on method testparameter but has not been marked @Optional or defined
in C:\Users\janga\AppData\Local\Temp\testng-eclipse-659805661\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testparameter -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="afterClass" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftertest" finished-at="2022-12-18T20:52:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method is-config="true" signature="aftersuite()[pri:0, instance:testngAnnotations.AnnotationImplements@2053d869]" started-at="2022-12-18T20:52:08 EST" name="aftersuite" finished-at="2022-12-18T20:52:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testngAnnotations.AnnotationImplements -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
